{"file":"my-component.entry.esm.js","mappings":";;AAAA,MAAM,cAAc,GAAG,0hBAA0hB;;MCOpiB,UAAU;;;qBAGsE,EAAE;4BAC7D,CAAC;;IAEjC,MAAM,iBAAiB;QACrB,MAAM,MAAM,GAAG,iCAAiC,CAAC;QACjD,MAAM,OAAO,GAAgB;YAC3B,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC;QACF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;gBAChB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAChD;YACD,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;SAC9C;KACF;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KACjE;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KACrF;IAED,eAAe;QACb,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC3E;QACD,OAAO,WAAW,CAAC;KACpB;IAED,MAAM;QACJ,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,QACE,EAAC,IAAI,uDACH,4DAAK,KAAK,EAAC,oBAAoB,IAC7B,+DAAQ,KAAK,EAAC,aAAa,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,aAEjD,EACR,YAAY,CAAC,GAAG,CAAC,IAAI,KACpB,WAAK,KAAK,EAAC,eAAe,IACxB,WAAK,KAAK,EAAC,iBAAiB,IAC1B,WAAK,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAC,eAAe,GAAG,EAChD,WAAK,KAAK,EAAC,YAAY,IAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAO,CACnD,CACF,CACP,CAAC,EACF,+DAAQ,KAAK,EAAC,aAAa,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,aAEjD,CACL,CACD,EACP;KACH;;;;;;;","names":[],"sources":["src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":["/* my-component.css */\n:host {\n  display: block;\n  width: 90%;\n  margin: 0 auto;\n}\n.carousel-container {\n  position: relative;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.carousel-items {\n  display: flex;\n  overflow: hidden;\n  width: 100%;\n}\n\n.carousel-item {\n  flex: none;\n  width: calc(100% / 5); /* Ajusta según cuántos ítems quieres mostrar a la vez */\n  text-align: center; /* Asegura que el texto esté centrado */\n}\n\n.image-container {\n  position: relative;\n  text-align: center;\n}\n\n.carousel-item img {\n  width: 100%; /* Asegúrate de que las imágenes se escalen correctamente */\n  display: block;\n}\n\n.image-text {\n  position: relative;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%; /* Hace que el ancho del texto coincida con el de la imagen */\n  height: 150px; /* Altura fija para el texto */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n}\n","import { Component, State, h, Host, Element } from '@stencil/core';\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyCarousel {\n  @Element() el: HTMLElement;\n\n  @State() items: { image: { url: string }; tiers: { awardLong: string }; text: string }[] = [];\n  @State() currentIndex: number = 0;\n\n  async componentWillLoad() {\n    const apiUrl = 'http://localhost:8080/api/proxy';\n    const options: RequestInit = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const response = await fetch(apiUrl, options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      this.items = data.offers;\n      console.log(this.items);\n    } catch (error) {\n      console.error('Could not load data:', error);\n    }\n  }\n\n  nextItem() {\n    this.currentIndex = (this.currentIndex + 1) % this.items.length;\n  }\n\n  prevItem() {\n    this.currentIndex = (this.currentIndex - 1 + this.items.length) % this.items.length;\n  }\n\n  getVisibleItems() {\n    let itemsToShow = [];\n    for (let i = 0; i < 5; i++) {\n      itemsToShow.push(this.items[(this.currentIndex + i) % this.items.length]);\n    }\n    return itemsToShow;\n  }\n\n  render() {\n    const visibleItems = this.getVisibleItems();\n    return (\n      <Host>\n        <div class=\"carousel-container\">\n          <button class=\"prev-button\" onClick={() => this.prevItem()}>\n            &#8592;\n          </button>\n          {visibleItems.map(item => (\n            <div class=\"carousel-item\">\n              <div class=\"image-container\">\n                <img src={item.image.url} alt=\"image-content\" />\n                <div class=\"image-text\">{item.tiers[0].awardLong}</div>\n              </div>\n            </div>\n          ))}\n          <button class=\"next-button\" onClick={() => this.nextItem()}>\n            &#8594;\n          </button>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}