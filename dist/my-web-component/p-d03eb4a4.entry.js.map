{"version":3,"names":["myComponentCss","MyComponentStyle0","MyCarousel","componentWillLoad","options","method","headers","response","fetch","this","apiUrl","ok","Error","data","json","offers","length","items","errorMessage","error","console","message","nextItem","currentIndex","prevItem","getVisibleItems","itemsToShow","i","push","render","visibleItems","h","Host","key","class","onClick","map","item","src","image","url","alt","_a","tiers","awardLong"],"sources":["src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":["/* my-component.css */\n:host {\n  display: block;\n  width: 90%;\n  margin: 0 auto;\n}\n.carousel-container {\n  position: relative;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.carousel-items {\n  display: flex;\n  overflow: hidden;\n  width: 100%;\n}\n\n.carousel-item {\n  flex: none;\n  width: calc(100% / 5); /* Ajusta según cuántos ítems quieres mostrar a la vez */\n  text-align: center; /* Asegura que el texto esté centrado */\n}\n\n.image-container {\n  position: relative;\n  text-align: center;\n}\n\n.carousel-item img {\n  width: 100%; /* Asegúrate de que las imágenes se escalen correctamente */\n  display: block;\n}\n\n.image-text {\n  position: relative;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%; /* Hace que el ancho del texto coincida con el de la imagen */\n  height: 150px; /* Altura fija para el texto */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n}\n","import { Component, State, h, Host, Element, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyCarousel {\n  @Element() el: HTMLElement;\n\n  @Prop() apiUrl: string; // new prop\n\n  @State() items: { image: { url: string }; tiers: { awardLong: string }; text: string }[] = [];\n  @State() currentIndex: number = 0;\n  @State() errorMessage: string = ''; // here we define the message that we want to show\n\n  async componentWillLoad() {\n    const options: RequestInit = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const response = await fetch(this.apiUrl, options);\n      if (!response.ok) {\n        throw new Error('Response was not ok or api url must be wrong..');\n      }\n      const data = await response.json();\n      if (data.offers && data.offers.length > 0) {\n        this.items = data.offers;\n      } else {\n        this.errorMessage = 'No offers found';\n      }\n    } catch (error) {\n      console.error('Could not load data:', error);\n      this.errorMessage = error.message;\n    }\n  }\n\n  nextItem() {\n    this.currentIndex = (this.currentIndex + 1) % this.items.length;\n  }\n\n  prevItem() {\n    this.currentIndex = (this.currentIndex - 1 + this.items.length) % this.items.length;\n  }\n\n  getVisibleItems() {\n    let itemsToShow = [];\n    for (let i = 0; i < 5; i++) {\n      itemsToShow.push(this.items[(this.currentIndex + i) % this.items.length]);\n    }\n    return itemsToShow;\n  }\n\n  render() {\n    const visibleItems = this.getVisibleItems();\n    return (\n      <Host>\n        <div class=\"carousel-container\">\n          {this.errorMessage === '' && (\n            <button class=\"prev-button\" onClick={() => this.prevItem()}>\n              &#8592;\n            </button>\n          )}\n          {this.errorMessage ? (\n            <div class=\"error-message\">{this.errorMessage}</div>\n          ) : (\n            visibleItems.map(item => (\n              <div class=\"carousel-item\">\n                <div class=\"image-container\">\n                  <img src={item.image.url} alt=\"image-content\" />\n                  <div class=\"image-text\">{item.tiers[0]?.awardLong || 'No tier info'}</div>\n                </div>\n              </div>\n            ))\n          )}\n          {this.errorMessage === '' && (\n            <button class=\"next-button\" onClick={() => this.nextItem()}>\n              &#8594;\n            </button>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAiB,2hBACvB,MAAAC,EAAeD,E,MCMFE,EAAU,M,0DAKsE,G,kBAC3D,E,kBACA,E,CAEhC,uBAAMC,GACJ,MAAMC,EAAuB,CAC3BC,OAAQ,MACRC,QAAS,CACP,eAAgB,qBAGpB,IACE,MAAMC,QAAiBC,MAAMC,KAAKC,OAAQN,GAC1C,IAAKG,EAASI,GAAI,CAChB,MAAM,IAAIC,MAAM,iD,CAElB,MAAMC,QAAaN,EAASO,OAC5B,GAAID,EAAKE,QAAUF,EAAKE,OAAOC,OAAS,EAAG,CACzCP,KAAKQ,MAAQJ,EAAKE,M,KACb,CACLN,KAAKS,aAAe,iB,EAEtB,MAAOC,GACPC,QAAQD,MAAM,uBAAwBA,GACtCV,KAAKS,aAAeC,EAAME,O,EAI9B,QAAAC,GACEb,KAAKc,cAAgBd,KAAKc,aAAe,GAAKd,KAAKQ,MAAMD,M,CAG3D,QAAAQ,GACEf,KAAKc,cAAgBd,KAAKc,aAAe,EAAId,KAAKQ,MAAMD,QAAUP,KAAKQ,MAAMD,M,CAG/E,eAAAS,GACE,IAAIC,EAAc,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BD,EAAYE,KAAKnB,KAAKQ,OAAOR,KAAKc,aAAeI,GAAKlB,KAAKQ,MAAMD,Q,CAEnE,OAAOU,C,CAGT,MAAAG,GACE,MAAMC,EAAerB,KAAKgB,kBAC1B,OACEM,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,sBACRzB,KAAKS,eAAiB,IACrBa,EAAA,UAAQG,MAAM,cAAcC,QAAS,IAAM1B,KAAKe,YAAU,KAI3Df,KAAKS,aACJa,EAAA,OAAKG,MAAM,iBAAiBzB,KAAKS,cAEjCY,EAAaM,KAAIC,I,MAAQ,OACvBN,EAAA,OAAKG,MAAM,iBACTH,EAAA,OAAKG,MAAM,mBACTH,EAAA,OAAKO,IAAKD,EAAKE,MAAMC,IAAKC,IAAI,kBAC9BV,EAAA,OAAKG,MAAM,gBAAcQ,EAAAL,EAAKM,MAAM,MAAE,MAAAD,SAAA,SAAAA,EAAEE,YAAa,iBAEnD,IAGTnC,KAAKS,eAAiB,IACrBa,EAAA,UAAQG,MAAM,cAAcC,QAAS,IAAM1B,KAAKa,YAAU,M"}